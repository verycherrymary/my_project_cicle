from pathlib import Path
import pickle
import streamlit as st
import datetime
from PIL import Image
import pandas as pd
from datetime import timedelta

# ====================== –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ============================
# –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# https://docs.streamlit.io/library/api-reference/utilities/st.set_page_config
st.set_page_config(
    layout="wide",
    initial_sidebar_state="auto",
    page_title="M-cycle",
    page_icon="üßä",
)
# ----------- —Ñ—É–Ω–∫—Ü–∏–∏ -------------------------------------

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –¥–∏—Å–∫–∞
# –∫—ç—à–∏—Ä—É–µ–º, –∏–Ω–∞—á–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
@st.cache_data
def load_image(image_path):
    image = Image.open(image_path)
    # –æ–±—Ä–µ–∑–∫–∞ –¥–æ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
    MAX_SIZE = (600, 400)
    image.thumbnail(MAX_SIZE)
    return image

# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
# –∫—ç—à–∏—Ä—É–µ–º, –∏–Ω–∞—á–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ
@st.cache_data
def load_model(model_path):
    # –∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    with open(model_path, 'rb') as f:
        model = pickle.load(f)
    return model


# ------------- –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –º–æ–¥–µ–ª–∏ ---------

# –ø—É—Ç—å –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏
image_path = Path.cwd() / 'Dias-fertiles-de-una-mujer.jpg'
image = load_image(image_path)

# –ø—É—Ç—å –¥–æ –º–æ–¥–µ–ª–∏
model_path = Path.cwd() / 'model_sar.pkl'
model_sar = load_model(model_path)


# ---------- –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ ------------------------
st.write(
    """
    # –ü—Ä–æ–≥–Ω–æ–∑ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    """
)

# –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
st.image(image)


# ====================== –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö ===============

st.sidebar.header('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ')

# —Å–ª–æ–≤–∞—Ä—å —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
features_dict = {
    'date_last': '–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏',
    'pred_num': '–ü—Ä–æ–≥–Ω–æ–∑ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤)',
      }

# –∫–Ω–æ–ø–∫–∏ - —Å–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ–ª–æ–≤–µ–∫–∞
date_last = st.sidebar.date_input(features_dict['date_last'], value=None)
pred_num = st.sidebar.slider(features_dict['pred_num'], min_value=1, max_value=3, value=1, step=1)


# –ø—Ä–µ–¥–∏–∫—Ç –º–æ–¥–µ–ª—å—é –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –Ω–∞ –≤—ã—Ö–æ–¥–µ –¥–∞—Ç—ã —Ü–∏–∫–ª–∞
st_prediction = model_sar.forecast(pred_num)
st_prediction_int = st_prediction.astype(int)
pred_list = st_prediction_int.to_list()
new_list = []
for i in range(len(pred_list)):
    new_list.append(pred_list[i] + sum(pred_list[:i]))
pred_cicle = pd.DataFrame(new_list, columns=['sarima_pred'])
pred_cicle['sarima_pred'] = pred_cicle['sarima_pred'].astype(str)
pred_cicle['sarima_pred'] = pred_cicle['sarima_pred'] + ' days'
pred_cicle['sarima_pred'] = pd.to_timedelta(pred_cicle['sarima_pred'])
pred_cicle['–î–∞—Ç—ã —Ü–∏–∫–ª–∞'] = pd.Timestamp(date_last) + pred_cicle['sarima_pred']
pred_cicle["–î–Ω–∏ –æ–≤—É–ª—è—Ü–∏–∏"] = pred_cicle["–î–∞—Ç—ã —Ü–∏–∫–ª–∞"] - timedelta(days=14)
pred_cicle['a'] = '/'

# –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
st.write("## –î–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞")
st.write(pred_cicle[['–î–∞—Ç—ã —Ü–∏–∫–ª–∞', 'a']].to_string(index=False, header=False))
st.write("## –î–Ω–∏ –æ–≤—É–ª—è—Ü–∏–∏")
st.write(pred_cicle[['–î–Ω–∏ –æ–≤—É–ª—è—Ü–∏–∏', 'a']].to_string(index=False, header=False))
